FROM nvidia/cuda:9.0-base-ubuntu16.04
#FROM nvidia/cuda:9.0-cudnn7-runtime-ubuntu16.04

LABEL maintainer="Valentin Kozlov <valentin.kozlov@kit.edu>"
# Dockerfile based on the one for Tensorflow from Tensorflow:
# https://github.com/tensorflow/tensorflow/tree/master/tensorflow/tools/docker
# modified by Valentin Kozlov on 21-Mar-2018

# Pick up some TF dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        libfreetype6-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        python \
        python-dev \
        rsync \
        software-properties-common \
        unzip \
        && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


#ENV CUDA_VERSION="9.0.176"
ENV CUDA_PKG_VERSION="9-0=9.0.176-1"
ENV NVVERSION="384"
ENV NVDRIVER="$NVVERSION.81-0ubuntu1"
COPY 7fa2af80.pub /tmp/7fa2af80.pub
RUN apt-key add /tmp/7fa2af80.pub && apt-get update && \
    mkdir /usr/lib/nvidia && \
#    apt remove -y libcudnn7 && \
    DEBIAN_FRONTEND=noninteractive apt install -yq --allow-downgrades --no-install-recommends \
        libcuda1-$NVVERSION=$NVDRIVER \
        libcudnn7=7.0.5.15-1+cuda9.0 \
        nvidia-$NVVERSION=$NVDRIVER \
        cuda-nvrtc-$CUDA_PKG_VERSION \
        cuda-nvgraph-$CUDA_PKG_VERSION \
        cuda-cusolver-$CUDA_PKG_VERSION \
        #cuda-cublas-9-0_9.0.176.2-1 \
        cuda-cublas-$CUDA_PKG_VERSION \
        cuda-cufft-$CUDA_PKG_VERSION \
        cuda-curand-$CUDA_PKG_VERSION \
        cuda-cusparse-$CUDA_PKG_VERSION \
        cuda-npp-$CUDA_PKG_VERSION \
        cuda-cudart-$CUDA_PKG_VERSION && \
    ln -s cuda-9.0 /usr/local/cuda && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cudo-repo-9-0-local/* && \
    rm -rf /tmp/*
#    apt-get -y autoremove

RUN curl -O https://bootstrap.pypa.io/get-pip.py && \
    python get-pip.py && \
    rm get-pip.py

RUN pip --no-cache-dir install \
        Pillow \
        h5py \
        ipykernel \
        jupyter \
        matplotlib \
        numpy \
        pandas \
        scipy \
        sklearn \
	future \
        && \
    python -m ipykernel.kernelspec

# --- DO NOT EDIT OR DELETE BETWEEN THE LINES --- #
# These lines will be edited automatically by parameterized_docker_build.sh. #
# COPY _PIP_FILE_ /
# RUN pip --no-cache-dir install /_PIP_FILE_
# RUN rm -f /_PIP_FILE_

# Install TensorFlow GPU version.
RUN pip --no-cache-dir install \
    http://storage.googleapis.com/tensorflow/linux/gpu/tensorflow_gpu-1.5.0-cp27-none-linux_x86_64.whl
# --- ~ DO NOT EDIT OR DELETE BETWEEN THE LINES --- #

# RUN ln -s /usr/bin/python3 /usr/bin/python#

# Set the working directory to /benchmarks
WORKDIR /benchmarks

# Copy the current directory contents into the container at /benchmarks
ADD . /benchmarks

# For CUDA profiling, TensorFlow requires CUPTI.
ENV LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# Run app.py when the container launches
CMD ["python", "benchmark_alexnet.py"]
